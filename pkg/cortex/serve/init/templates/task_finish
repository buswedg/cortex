#!/usr/bin/execlineb -S2

# Copyright 2021 Cortex Labs, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

define exit_code ${1}
define signal ${2}

# when process receives a non-catchable signal (i.e. KILL/9)
# s6 sets the exit code to >= 256 and expects the user to inspect the signal value instead
ifelse { s6-test ${exit_code} -gt 255 } { 
    foreground {
        foreground { s6-echo "task ${TASK_NAME} received exit code >= 256, exiting with signal value ${signal} instead" } 
        redirfd -w 1 /var/run/s6/env-stage3/S6_STAGE2_EXITED s6-echo -n -- ${signal}
    }
    s6-svscanctl -t /var/run/s6/services 
}

# if we receive an exit code between 0 and 255, then exit accordingly with the given value
ifelse { s6-test ${exit_code} -ne 0 } {
    foreground {
        foreground { s6-echo "task ${TASK_NAME} exiting with exit code ${exit_code}" }
        redirfd -w 1 /var/run/s6/env-stage3/S6_STAGE2_EXITED s6-echo -n -- ${exit_code}
    }
    s6-svscanctl -t /var/run/s6/services
}

# otherwise stop the service
if { s6-test ${exit_code} -eq 0 }
foreground { s6-echo "task ${TASK_NAME} exiting successfully" }
s6-svscanctl -t /var/run/s6/services
